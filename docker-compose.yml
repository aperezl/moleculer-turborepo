version: '3'

services:
  server:
    container_name: moleculer-server
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
    hostname: server
    scale: 2
    depends_on:
      - nats
    environment:
      - NODE_ENV=production
    restart: always
    ports:
      - 4000:4000
    networks:
      - app_network

  nats:
    image: nats
    networks:
      - app_network

  traefik:
    image: traefik:1.7
    container_name: traefik
    command:
      - '--api'
      - '--docker'
      - '--docker.watch'
    labels:
      - 'traefik.enable=true'
      - 'traefik.backend=traefik'
      - 'traefik.port=8080'
    ports:
      - 3000:80
      - 3001:8080
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock
      # - /dev/null:/traefik.toml
    networks:
      - internal
      - default

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      # - ./prometheus:/etc/prometheus:ro ## Share "prometheus" dir with Prometheus service
    networks:
      - internal

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  app_network:
    external: true
  internal:
    external: false
